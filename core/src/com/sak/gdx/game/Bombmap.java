package com.sak.gdx.game;

import com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer.Random;
import com.badlogic.gdx.math.MathUtils;

public class Bombmap {
	public static final int num = MathUtils.random(1,17);
	private char[][] BOMBMAP = new char [][] {
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
};
	private void randombomb(){
		for (int i=1; i<12;i++){
			if (i==1 || i==2){
				for (int j=0;j<2;j++){
				//	BOMBMAP[i][randomnumber(2,18)]= 1;
					BOMBMAP[i][num]= '*';
				}
			} else if (i==10 || i==11){
				for (int j=0;j<2;j++){
				//	BOMBMAP[i][randomnumber(1,16)]= 1;  
					BOMBMAP[i][num]= '*';
				}
			} else {
				for (int j=0;j<2;j++){
				//	BOMBMAP[i][randomnumber(1,18)]= 1;
					BOMBMAP[i][num]= '*';
				}
			}
		}
	}
	
	
	public boolean hasBombAt(int r, int c){
    	return BOMBMAP[r][c] == '*';
    }
	private int randomnumber(int min, int max) {
		return (int)(Math.random() * ((max - min) + 1)) + min;
	}
}
